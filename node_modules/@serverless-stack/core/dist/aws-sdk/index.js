"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.configureAwsCredentials = void 0;
const awscli_compatible_1 = require("./awscli-compatible");
const aws_sdk_1 = __importDefault(require("aws-sdk"));
let credentials;
async function configureAwsCredentials(options) {
    // Get credentials
    if (!credentials) {
        const chain = await awscli_compatible_1.AwsCliCompatible.credentialChain({
            profile: options === null || options === void 0 ? void 0 : options.profile,
            //ec2instance: options.ec2creds,
            //containerCreds: options.containerCreds,
            //httpOptions: sdkOptions.httpOptions,
        });
        credentials = await chain.resolvePromise();
    }
    // Configure AWS SDK
    // Note that this is required when SST make AWS SDK calls directly
    aws_sdk_1.default.config.credentials = credentials;
    // Configure environment variable
    // Note that this is required when SST invokes CDK CLI
    process.env.AWS_ACCESS_KEY_ID = credentials.accessKeyId;
    process.env.AWS_SECRET_ACCESS_KEY = credentials.secretAccessKey;
    if (credentials.sessionToken) {
        process.env.AWS_SESSION_TOKEN = credentials.sessionToken;
    }
}
exports.configureAwsCredentials = configureAwsCredentials;
