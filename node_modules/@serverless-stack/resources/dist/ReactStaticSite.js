"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReactStaticSite = void 0;
const path = __importStar(require("path"));
const fs = __importStar(require("fs-extra"));
const StaticSite_1 = require("./StaticSite");
/////////////////////
// Construct
/////////////////////
/**
 * The `ReactStaticSite` construct is a higher level CDK construct that makes it easy to create a React single page app. It provides a simple way to build and deploy the site to an S3 bucket; setup a CloudFront CDN for fast content delivery; and configure a custom domain for the website URL.
 *
 * It's designed to work with static sites built with [Create React App](https://create-react-app.dev/). It allows you to [automatically set environment variables](#configuring-environment-variables) in your React app directly from the outputs of your SST app. And it can also create a `.d.ts` type definition file for the environment variables.
 *
 * The `ReactStaticSite` construct internally extends the [`StaticSite`](StaticSite.md) construct with the following pre-configured defaults.
 *
 * - [`indexPage`](StaticSite.md#indexpage) is set to `index.html`.
 * - [`errorPage`](StaticSite.md#errorpage) is set to `redirect_to_index_page`. So error pages are redirected to the index page.
 * - [`buildCommand`](StaticSite.md#buildcommand) is `npm run build`.
 * - [`buildOutput`](StaticSite.md#buildoutput) is the `build` folder in your React app.
 * - [`fileOptions`](StaticSite.md#fileoptions) sets the cache control to `max-age=0,no-cache,no-store,must-revalidate` for HTML files; and `max-age=31536000,public,immutable` for JS/CSS files.
 *
 * @example
 *
 * ### Minimal Config
 *
 * Deploys a Create React App in the `path/to/src` directory.
 *
 * ```js
 * new ReactStaticSite(stack, "ReactSite", {
 *   path: "path/to/src",
 * });
 * ```
 */
class ReactStaticSite extends StaticSite_1.StaticSite {
    constructor(scope, id, props) {
        const { path: sitePath, environment } = props || {};
        // Validate environment
        Object.keys(environment || {}).forEach((key) => {
            if (!key.startsWith("REACT_APP_")) {
                throw new Error(`Environment variables in the "${id}" ReactStaticSite must start with "REACT_APP_".`);
            }
        });
        // generate buildCommand
        let defaultBuildCommand = "npm run build";
        if (fs.existsSync(path.join(sitePath, "yarn.lock"))) {
            defaultBuildCommand = "yarn build";
        }
        super(scope, id, Object.assign({ indexPage: "index.html", errorPage: "redirect_to_index_page", buildCommand: defaultBuildCommand, buildOutput: "build", fileOptions: [
                {
                    exclude: "*",
                    include: "*.html",
                    cacheControl: "max-age=0,no-cache,no-store,must-revalidate",
                },
                {
                    exclude: "*",
                    include: ["*.js", "*.css"],
                    cacheControl: "max-age=31536000,public,immutable",
                },
            ] }, props));
    }
}
exports.ReactStaticSite = ReactStaticSite;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiUmVhY3RTdGF0aWNTaXRlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL1JlYWN0U3RhdGljU2l0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDJDQUE2QjtBQUM3Qiw2Q0FBK0I7QUFHL0IsNkNBQTJEO0FBRzNELHFCQUFxQjtBQUNyQixZQUFZO0FBQ1oscUJBQXFCO0FBRXJCOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0F3Qkc7QUFDSCxNQUFhLGVBQWdCLFNBQVEsdUJBQVU7SUFDN0MsWUFBWSxLQUFnQixFQUFFLEVBQVUsRUFBRSxLQUEyQjtRQUNuRSxNQUFNLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUUsR0FBRyxLQUFLLElBQUksRUFBRSxDQUFDO1FBRXBELHVCQUF1QjtRQUN2QixNQUFNLENBQUMsSUFBSSxDQUFDLFdBQVcsSUFBSSxFQUFFLENBQUMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUUsRUFBRTtZQUM3QyxJQUFJLENBQUMsR0FBRyxDQUFDLFVBQVUsQ0FBQyxZQUFZLENBQUMsRUFBRTtnQkFDakMsTUFBTSxJQUFJLEtBQUssQ0FDYixpQ0FBaUMsRUFBRSxpREFBaUQsQ0FDckYsQ0FBQzthQUNIO1FBQ0gsQ0FBQyxDQUFDLENBQUM7UUFFSCx3QkFBd0I7UUFDeEIsSUFBSSxtQkFBbUIsR0FBRyxlQUFlLENBQUM7UUFDMUMsSUFBSSxFQUFFLENBQUMsVUFBVSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFLFdBQVcsQ0FBQyxDQUFDLEVBQUU7WUFDbkQsbUJBQW1CLEdBQUcsWUFBWSxDQUFDO1NBQ3BDO1FBRUQsS0FBSyxDQUFDLEtBQUssRUFBRSxFQUFFLGtCQUNiLFNBQVMsRUFBRSxZQUFZLEVBQ3ZCLFNBQVMsRUFBRSx3QkFBd0IsRUFDbkMsWUFBWSxFQUFFLG1CQUFtQixFQUNqQyxXQUFXLEVBQUUsT0FBTyxFQUNwQixXQUFXLEVBQUU7Z0JBQ1g7b0JBQ0UsT0FBTyxFQUFFLEdBQUc7b0JBQ1osT0FBTyxFQUFFLFFBQVE7b0JBQ2pCLFlBQVksRUFBRSw2Q0FBNkM7aUJBQzVEO2dCQUNEO29CQUNFLE9BQU8sRUFBRSxHQUFHO29CQUNaLE9BQU8sRUFBRSxDQUFDLE1BQU0sRUFBRSxPQUFPLENBQUM7b0JBQzFCLFlBQVksRUFBRSxtQ0FBbUM7aUJBQ2xEO2FBQ0YsSUFDRSxLQUFLLEVBQ1IsQ0FBQztJQUNMLENBQUM7Q0FDRjtBQXZDRCwwQ0F1Q0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgKiBhcyBwYXRoIGZyb20gXCJwYXRoXCI7XG5pbXBvcnQgKiBhcyBmcyBmcm9tIFwiZnMtZXh0cmFcIjtcbmltcG9ydCB7IENvbnN0cnVjdCB9IGZyb20gXCJjb25zdHJ1Y3RzXCI7XG5cbmltcG9ydCB7IFN0YXRpY1NpdGUsIFN0YXRpY1NpdGVQcm9wcyB9IGZyb20gXCIuL1N0YXRpY1NpdGVcIjtcbmltcG9ydCB7IFNTVENvbnN0cnVjdCB9IGZyb20gXCIuL0NvbnN0cnVjdFwiO1xuXG4vLy8vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIENvbnN0cnVjdFxuLy8vLy8vLy8vLy8vLy8vLy8vLy8vXG5cbi8qKlxuICogVGhlIGBSZWFjdFN0YXRpY1NpdGVgIGNvbnN0cnVjdCBpcyBhIGhpZ2hlciBsZXZlbCBDREsgY29uc3RydWN0IHRoYXQgbWFrZXMgaXQgZWFzeSB0byBjcmVhdGUgYSBSZWFjdCBzaW5nbGUgcGFnZSBhcHAuIEl0IHByb3ZpZGVzIGEgc2ltcGxlIHdheSB0byBidWlsZCBhbmQgZGVwbG95IHRoZSBzaXRlIHRvIGFuIFMzIGJ1Y2tldDsgc2V0dXAgYSBDbG91ZEZyb250IENETiBmb3IgZmFzdCBjb250ZW50IGRlbGl2ZXJ5OyBhbmQgY29uZmlndXJlIGEgY3VzdG9tIGRvbWFpbiBmb3IgdGhlIHdlYnNpdGUgVVJMLlxuICpcbiAqIEl0J3MgZGVzaWduZWQgdG8gd29yayB3aXRoIHN0YXRpYyBzaXRlcyBidWlsdCB3aXRoIFtDcmVhdGUgUmVhY3QgQXBwXShodHRwczovL2NyZWF0ZS1yZWFjdC1hcHAuZGV2LykuIEl0IGFsbG93cyB5b3UgdG8gW2F1dG9tYXRpY2FsbHkgc2V0IGVudmlyb25tZW50IHZhcmlhYmxlc10oI2NvbmZpZ3VyaW5nLWVudmlyb25tZW50LXZhcmlhYmxlcykgaW4geW91ciBSZWFjdCBhcHAgZGlyZWN0bHkgZnJvbSB0aGUgb3V0cHV0cyBvZiB5b3VyIFNTVCBhcHAuIEFuZCBpdCBjYW4gYWxzbyBjcmVhdGUgYSBgLmQudHNgIHR5cGUgZGVmaW5pdGlvbiBmaWxlIGZvciB0aGUgZW52aXJvbm1lbnQgdmFyaWFibGVzLlxuICpcbiAqIFRoZSBgUmVhY3RTdGF0aWNTaXRlYCBjb25zdHJ1Y3QgaW50ZXJuYWxseSBleHRlbmRzIHRoZSBbYFN0YXRpY1NpdGVgXShTdGF0aWNTaXRlLm1kKSBjb25zdHJ1Y3Qgd2l0aCB0aGUgZm9sbG93aW5nIHByZS1jb25maWd1cmVkIGRlZmF1bHRzLlxuICpcbiAqIC0gW2BpbmRleFBhZ2VgXShTdGF0aWNTaXRlLm1kI2luZGV4cGFnZSkgaXMgc2V0IHRvIGBpbmRleC5odG1sYC5cbiAqIC0gW2BlcnJvclBhZ2VgXShTdGF0aWNTaXRlLm1kI2Vycm9ycGFnZSkgaXMgc2V0IHRvIGByZWRpcmVjdF90b19pbmRleF9wYWdlYC4gU28gZXJyb3IgcGFnZXMgYXJlIHJlZGlyZWN0ZWQgdG8gdGhlIGluZGV4IHBhZ2UuXG4gKiAtIFtgYnVpbGRDb21tYW5kYF0oU3RhdGljU2l0ZS5tZCNidWlsZGNvbW1hbmQpIGlzIGBucG0gcnVuIGJ1aWxkYC5cbiAqIC0gW2BidWlsZE91dHB1dGBdKFN0YXRpY1NpdGUubWQjYnVpbGRvdXRwdXQpIGlzIHRoZSBgYnVpbGRgIGZvbGRlciBpbiB5b3VyIFJlYWN0IGFwcC5cbiAqIC0gW2BmaWxlT3B0aW9uc2BdKFN0YXRpY1NpdGUubWQjZmlsZW9wdGlvbnMpIHNldHMgdGhlIGNhY2hlIGNvbnRyb2wgdG8gYG1heC1hZ2U9MCxuby1jYWNoZSxuby1zdG9yZSxtdXN0LXJldmFsaWRhdGVgIGZvciBIVE1MIGZpbGVzOyBhbmQgYG1heC1hZ2U9MzE1MzYwMDAscHVibGljLGltbXV0YWJsZWAgZm9yIEpTL0NTUyBmaWxlcy5cbiAqXG4gKiBAZXhhbXBsZVxuICpcbiAqICMjIyBNaW5pbWFsIENvbmZpZ1xuICpcbiAqIERlcGxveXMgYSBDcmVhdGUgUmVhY3QgQXBwIGluIHRoZSBgcGF0aC90by9zcmNgIGRpcmVjdG9yeS5cbiAqXG4gKiBgYGBqc1xuICogbmV3IFJlYWN0U3RhdGljU2l0ZShzdGFjaywgXCJSZWFjdFNpdGVcIiwge1xuICogICBwYXRoOiBcInBhdGgvdG8vc3JjXCIsXG4gKiB9KTtcbiAqIGBgYFxuICovXG5leHBvcnQgY2xhc3MgUmVhY3RTdGF0aWNTaXRlIGV4dGVuZHMgU3RhdGljU2l0ZSBpbXBsZW1lbnRzIFNTVENvbnN0cnVjdCB7XG4gIGNvbnN0cnVjdG9yKHNjb3BlOiBDb25zdHJ1Y3QsIGlkOiBzdHJpbmcsIHByb3BzOiBSZWFjdFN0YXRpY1NpdGVQcm9wcykge1xuICAgIGNvbnN0IHsgcGF0aDogc2l0ZVBhdGgsIGVudmlyb25tZW50IH0gPSBwcm9wcyB8fCB7fTtcblxuICAgIC8vIFZhbGlkYXRlIGVudmlyb25tZW50XG4gICAgT2JqZWN0LmtleXMoZW52aXJvbm1lbnQgfHwge30pLmZvckVhY2goKGtleSkgPT4ge1xuICAgICAgaWYgKCFrZXkuc3RhcnRzV2l0aChcIlJFQUNUX0FQUF9cIikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFxuICAgICAgICAgIGBFbnZpcm9ubWVudCB2YXJpYWJsZXMgaW4gdGhlIFwiJHtpZH1cIiBSZWFjdFN0YXRpY1NpdGUgbXVzdCBzdGFydCB3aXRoIFwiUkVBQ1RfQVBQX1wiLmBcbiAgICAgICAgKTtcbiAgICAgIH1cbiAgICB9KTtcblxuICAgIC8vIGdlbmVyYXRlIGJ1aWxkQ29tbWFuZFxuICAgIGxldCBkZWZhdWx0QnVpbGRDb21tYW5kID0gXCJucG0gcnVuIGJ1aWxkXCI7XG4gICAgaWYgKGZzLmV4aXN0c1N5bmMocGF0aC5qb2luKHNpdGVQYXRoLCBcInlhcm4ubG9ja1wiKSkpIHtcbiAgICAgIGRlZmF1bHRCdWlsZENvbW1hbmQgPSBcInlhcm4gYnVpbGRcIjtcbiAgICB9XG5cbiAgICBzdXBlcihzY29wZSwgaWQsIHtcbiAgICAgIGluZGV4UGFnZTogXCJpbmRleC5odG1sXCIsXG4gICAgICBlcnJvclBhZ2U6IFwicmVkaXJlY3RfdG9faW5kZXhfcGFnZVwiLFxuICAgICAgYnVpbGRDb21tYW5kOiBkZWZhdWx0QnVpbGRDb21tYW5kLFxuICAgICAgYnVpbGRPdXRwdXQ6IFwiYnVpbGRcIixcbiAgICAgIGZpbGVPcHRpb25zOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBleGNsdWRlOiBcIipcIixcbiAgICAgICAgICBpbmNsdWRlOiBcIiouaHRtbFwiLFxuICAgICAgICAgIGNhY2hlQ29udHJvbDogXCJtYXgtYWdlPTAsbm8tY2FjaGUsbm8tc3RvcmUsbXVzdC1yZXZhbGlkYXRlXCIsXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBleGNsdWRlOiBcIipcIixcbiAgICAgICAgICBpbmNsdWRlOiBbXCIqLmpzXCIsIFwiKi5jc3NcIl0sXG4gICAgICAgICAgY2FjaGVDb250cm9sOiBcIm1heC1hZ2U9MzE1MzYwMDAscHVibGljLGltbXV0YWJsZVwiLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICAgIC4uLnByb3BzLFxuICAgIH0pO1xuICB9XG59XG5cbmV4cG9ydCB0eXBlIFJlYWN0U3RhdGljU2l0ZVByb3BzID0gU3RhdGljU2l0ZVByb3BzO1xuIl19