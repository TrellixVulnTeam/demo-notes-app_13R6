"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.toCdkDuration = void 0;
const cdk = __importStar(require("aws-cdk-lib"));
function toCdkDuration(duration) {
    const [count, unit] = duration.split(" ");
    const countNum = parseInt(count);
    const unitLower = unit.toLowerCase();
    if (unitLower.startsWith("second")) {
        return cdk.Duration.seconds(countNum);
    }
    else if (unitLower.startsWith("minute")) {
        return cdk.Duration.minutes(countNum);
    }
    else if (unitLower.startsWith("hour")) {
        return cdk.Duration.hours(countNum);
    }
    else if (unitLower.startsWith("day")) {
        return cdk.Duration.days(countNum);
    }
    return cdk.Duration.days(0);
}
exports.toCdkDuration = toCdkDuration;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHVyYXRpb24uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbC9kdXJhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLGlEQUFtQztBQVduQyxTQUFnQixhQUFhLENBQUMsUUFBa0I7SUFDOUMsTUFBTSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsR0FBRyxRQUFRLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQzFDLE1BQU0sUUFBUSxHQUFHLFFBQVEsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUNqQyxNQUFNLFNBQVMsR0FBRyxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUM7SUFDckMsSUFBSSxTQUFTLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxFQUFFO1FBQ2xDLE9BQU8sR0FBRyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDdkM7U0FBTSxJQUFJLFNBQVMsQ0FBQyxVQUFVLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDekMsT0FBTyxHQUFHLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQztLQUN2QztTQUFNLElBQUksU0FBUyxDQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRTtRQUN2QyxPQUFPLEdBQUcsQ0FBQyxRQUFRLENBQUMsS0FBSyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0tBQ3JDO1NBQU0sSUFBSSxTQUFTLENBQUMsVUFBVSxDQUFDLEtBQUssQ0FBQyxFQUFFO1FBQ3RDLE9BQU8sR0FBRyxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7S0FDcEM7SUFFRCxPQUFPLEdBQUcsQ0FBQyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO0FBQzlCLENBQUM7QUFmRCxzQ0FlQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNkayBmcm9tIFwiYXdzLWNkay1saWJcIjtcbmV4cG9ydCB0eXBlIER1cmF0aW9uID0gYCR7bnVtYmVyfSAke1xuICB8IFwic2Vjb25kXCJcbiAgfCBcInNlY29uZHNcIlxuICB8IFwibWludXRlXCJcbiAgfCBcIm1pbnV0ZXNcIlxuICB8IFwiaG91clwiXG4gIHwgXCJob3Vyc1wiXG4gIHwgXCJkYXlcIlxuICB8IFwiZGF5c1wifWA7XG5cbmV4cG9ydCBmdW5jdGlvbiB0b0Nka0R1cmF0aW9uKGR1cmF0aW9uOiBEdXJhdGlvbik6IGNkay5EdXJhdGlvbiB7XG4gIGNvbnN0IFtjb3VudCwgdW5pdF0gPSBkdXJhdGlvbi5zcGxpdChcIiBcIik7XG4gIGNvbnN0IGNvdW50TnVtID0gcGFyc2VJbnQoY291bnQpO1xuICBjb25zdCB1bml0TG93ZXIgPSB1bml0LnRvTG93ZXJDYXNlKCk7XG4gIGlmICh1bml0TG93ZXIuc3RhcnRzV2l0aChcInNlY29uZFwiKSkge1xuICAgIHJldHVybiBjZGsuRHVyYXRpb24uc2Vjb25kcyhjb3VudE51bSk7XG4gIH0gZWxzZSBpZiAodW5pdExvd2VyLnN0YXJ0c1dpdGgoXCJtaW51dGVcIikpIHtcbiAgICByZXR1cm4gY2RrLkR1cmF0aW9uLm1pbnV0ZXMoY291bnROdW0pO1xuICB9IGVsc2UgaWYgKHVuaXRMb3dlci5zdGFydHNXaXRoKFwiaG91clwiKSkge1xuICAgIHJldHVybiBjZGsuRHVyYXRpb24uaG91cnMoY291bnROdW0pO1xuICB9IGVsc2UgaWYgKHVuaXRMb3dlci5zdGFydHNXaXRoKFwiZGF5XCIpKSB7XG4gICAgcmV0dXJuIGNkay5EdXJhdGlvbi5kYXlzKGNvdW50TnVtKTtcbiAgfVxuXG4gIHJldHVybiBjZGsuRHVyYXRpb24uZGF5cygwKTtcbn1cbiJdfQ==