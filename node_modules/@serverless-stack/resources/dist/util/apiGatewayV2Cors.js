"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.buildCorsConfig = void 0;
const apig = __importStar(require("@aws-cdk/aws-apigatewayv2-alpha"));
const duration_1 = require("./duration");
function buildCorsConfig(cors) {
    // Handle cors: false
    if (cors === false) {
        return;
    }
    // Handle cors: true | undefined
    else if (cors === undefined || cors === true) {
        return {
            allowHeaders: ["*"],
            allowMethods: [apig.CorsHttpMethod.ANY],
            allowOrigins: ["*"],
        };
    }
    // Handle cors: apig.CorsPreflightOptions
    else {
        return {
            allowCredentials: cors.allowCredentials,
            allowHeaders: cors.allowHeaders,
            allowMethods: (cors.allowMethods || []).map((method) => apig.CorsHttpMethod[method]),
            allowOrigins: cors.allowOrigins,
            exposeHeaders: cors.exposeHeaders,
            maxAge: cors.maxAge && (0, duration_1.toCdkDuration)(cors.maxAge),
        };
        cors;
    }
}
exports.buildCorsConfig = buildCorsConfig;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpR2F0ZXdheVYyQ29ycy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsL2FwaUdhdGV3YXlWMkNvcnMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBQSxzRUFBd0Q7QUFDeEQseUNBQXFEO0FBc0NyRCxTQUFnQixlQUFlLENBQzdCLElBQTBCO0lBRTFCLHFCQUFxQjtJQUNyQixJQUFJLElBQUksS0FBSyxLQUFLLEVBQUU7UUFDbEIsT0FBTztLQUNSO0lBRUQsZ0NBQWdDO1NBQzNCLElBQUksSUFBSSxLQUFLLFNBQVMsSUFBSSxJQUFJLEtBQUssSUFBSSxFQUFFO1FBQzVDLE9BQU87WUFDTCxZQUFZLEVBQUUsQ0FBQyxHQUFHLENBQUM7WUFDbkIsWUFBWSxFQUFFLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxHQUFHLENBQUM7WUFDdkMsWUFBWSxFQUFFLENBQUMsR0FBRyxDQUFDO1NBQ3BCLENBQUM7S0FDSDtJQUVELHlDQUF5QztTQUNwQztRQUNILE9BQU87WUFDTCxnQkFBZ0IsRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1lBQ3ZDLFlBQVksRUFBRSxJQUFJLENBQUMsWUFBWTtZQUMvQixZQUFZLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxJQUFJLEVBQUUsQ0FBQyxDQUFDLEdBQUcsQ0FDekMsQ0FBQyxNQUFNLEVBQUUsRUFBRSxDQUNULElBQUksQ0FBQyxjQUFjLENBQUMsTUFBMEMsQ0FBQyxDQUNsRTtZQUNELFlBQVksRUFBRSxJQUFJLENBQUMsWUFBWTtZQUMvQixhQUFhLEVBQUUsSUFBSSxDQUFDLGFBQWE7WUFDakMsTUFBTSxFQUFFLElBQUksQ0FBQyxNQUFNLElBQUksSUFBQSx3QkFBYSxFQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7U0FDbEQsQ0FBQztRQUNGLElBQWlDLENBQUM7S0FDbkM7QUFDSCxDQUFDO0FBaENELDBDQWdDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGFwaWcgZnJvbSBcIkBhd3MtY2RrL2F3cy1hcGlnYXRld2F5djItYWxwaGFcIjtcbmltcG9ydCB7IER1cmF0aW9uLCB0b0Nka0R1cmF0aW9uIH0gZnJvbSBcIi4vZHVyYXRpb25cIjtcblxuZXhwb3J0IGludGVyZmFjZSBDb3JzUHJvcHMge1xuICAvKipcbiAgICogU3BlY2lmaWVzIHdoZXRoZXIgY3JlZGVudGlhbHMgYXJlIGluY2x1ZGVkIGluIHRoZSBDT1JTIHJlcXVlc3QuXG4gICAqL1xuICBhbGxvd0NyZWRlbnRpYWxzPzogYm9vbGVhbjtcbiAgLyoqXG4gICAqIFRoZSBjb2xsZWN0aW9uIG9mIGFsbG93ZWQgaGVhZGVycy5cbiAgICovXG4gIGFsbG93SGVhZGVycz86IHN0cmluZ1tdO1xuICAvKipcbiAgICogVGhlIGNvbGxlY3Rpb24gb2YgYWxsb3dlZCBIVFRQIG1ldGhvZHMuXG4gICAqL1xuICBhbGxvd01ldGhvZHM/OiAoa2V5b2YgdHlwZW9mIGFwaWcuQ29yc0h0dHBNZXRob2QpW107XG4gIC8qKlxuICAgKiBUaGUgY29sbGVjdGlvbiBvZiBhbGxvd2VkIG9yaWdpbnMuXG4gICAqXG4gICAqIEBleGFtcGxlXG4gICAqIGBgYGpzXG4gICAqIC8vIEFsbG93IGFsbCBvcmlnaW5zXG4gICAqIGFsbG93T3JpZ2luczogW1wiKlwiXVxuICAgKlxuICAgKiAvLyBBbGxvdyBzcGVjaWZpYyBvcmlnaW5zLiBOb3RlIHRoYXQgdGhlIHVybCBwcm90b2NvbCwgaWUuIFwiaHR0cHM6Ly9cIiwgaXMgcmVxdWlyZWQuXG4gICAqIGFsbG93T3JpZ2luczogW1wiaHR0cHM6Ly9kb21haW4uY29tXCJdXG4gICAqIGBgYFxuICAgKi9cbiAgYWxsb3dPcmlnaW5zPzogc3RyaW5nW107XG4gIC8qKlxuICAgKiBUaGUgY29sbGVjdGlvbiBvZiBleHBvc2VkIGhlYWRlcnMuXG4gICAqL1xuICBleHBvc2VIZWFkZXJzPzogc3RyaW5nW107XG4gIC8qKlxuICAgKiBTcGVjaWZ5IGhvdyBsb25nIHRoZSByZXN1bHRzIG9mIGEgcHJlZmxpZ2h0IHJlc3BvbnNlIGNhbiBiZSBjYWNoZWRcbiAgICovXG4gIG1heEFnZT86IER1cmF0aW9uO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gYnVpbGRDb3JzQ29uZmlnKFxuICBjb3JzPzogYm9vbGVhbiB8IENvcnNQcm9wc1xuKTogYXBpZy5Db3JzUHJlZmxpZ2h0T3B0aW9ucyB8IHVuZGVmaW5lZCB7XG4gIC8vIEhhbmRsZSBjb3JzOiBmYWxzZVxuICBpZiAoY29ycyA9PT0gZmFsc2UpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICAvLyBIYW5kbGUgY29yczogdHJ1ZSB8IHVuZGVmaW5lZFxuICBlbHNlIGlmIChjb3JzID09PSB1bmRlZmluZWQgfHwgY29ycyA9PT0gdHJ1ZSkge1xuICAgIHJldHVybiB7XG4gICAgICBhbGxvd0hlYWRlcnM6IFtcIipcIl0sXG4gICAgICBhbGxvd01ldGhvZHM6IFthcGlnLkNvcnNIdHRwTWV0aG9kLkFOWV0sXG4gICAgICBhbGxvd09yaWdpbnM6IFtcIipcIl0sXG4gICAgfTtcbiAgfVxuXG4gIC8vIEhhbmRsZSBjb3JzOiBhcGlnLkNvcnNQcmVmbGlnaHRPcHRpb25zXG4gIGVsc2Uge1xuICAgIHJldHVybiB7XG4gICAgICBhbGxvd0NyZWRlbnRpYWxzOiBjb3JzLmFsbG93Q3JlZGVudGlhbHMsXG4gICAgICBhbGxvd0hlYWRlcnM6IGNvcnMuYWxsb3dIZWFkZXJzLFxuICAgICAgYWxsb3dNZXRob2RzOiAoY29ycy5hbGxvd01ldGhvZHMgfHwgW10pLm1hcChcbiAgICAgICAgKG1ldGhvZCkgPT5cbiAgICAgICAgICBhcGlnLkNvcnNIdHRwTWV0aG9kW21ldGhvZCBhcyBrZXlvZiB0eXBlb2YgYXBpZy5Db3JzSHR0cE1ldGhvZF1cbiAgICAgICksXG4gICAgICBhbGxvd09yaWdpbnM6IGNvcnMuYWxsb3dPcmlnaW5zLFxuICAgICAgZXhwb3NlSGVhZGVyczogY29ycy5leHBvc2VIZWFkZXJzLFxuICAgICAgbWF4QWdlOiBjb3JzLm1heEFnZSAmJiB0b0Nka0R1cmF0aW9uKGNvcnMubWF4QWdlKSxcbiAgICB9O1xuICAgIGNvcnMgYXMgYXBpZy5Db3JzUHJlZmxpZ2h0T3B0aW9ucztcbiAgfVxufVxuIl19