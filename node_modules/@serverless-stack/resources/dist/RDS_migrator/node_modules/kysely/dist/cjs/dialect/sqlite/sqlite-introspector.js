"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SqliteIntrospector = void 0;
const migrator_js_1 = require("../../migration/migrator.js");
class SqliteIntrospector {
    #db;
    constructor(db) {
        this.#db = db;
    }
    async getMetadata(options = { withInternalKyselyTables: false }) {
        let query = this.#db
            .selectFrom('sqlite_schema')
            .where('type', '=', 'table')
            .where('name', 'not like', 'sqlite_%')
            .select('name')
            .castTo();
        if (!options.withInternalKyselyTables) {
            query = query
                .where('name', '!=', migrator_js_1.MIGRATION_TABLE)
                .where('name', '!=', migrator_js_1.MIGRATION_LOCK_TABLE);
        }
        const tables = await query.execute();
        return {
            tables: await Promise.all(tables.map(({ name }) => this.#getTableMetadata(name))),
        };
    }
    async #getTableMetadata(table) {
        const db = this.#db;
        const columns = await db
            .selectFrom(db.raw(`PRAGMA_TABLE_INFO(?)`, [table]).as('table_info'))
            .select(['name', 'type', 'notnull'])
            .castTo()
            .execute();
        return {
            name: table,
            columns: columns.map((col) => ({
                name: col.name,
                dataType: col.type,
                isNullable: !col.notnull,
            })),
        };
    }
}
exports.SqliteIntrospector = SqliteIntrospector;
