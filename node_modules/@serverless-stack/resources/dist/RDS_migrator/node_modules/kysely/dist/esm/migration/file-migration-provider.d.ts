import { Migration, MigrationProvider } from './migrator.js';
/**
 * Reads all migrations from a folder.
 *
 * ### Examples
 *
 * ```ts
 * new FileMigrationProvider(
 *   'path/to/migrations/folder'
 * )
 * ```
 */
export declare class FileMigrationProvider implements MigrationProvider {
    #private;
    constructor(migrationFolderPath: string);
    /**
     * Returns all migrations, old and new.
     *
     * For example if you have your migrations in a folder as separate files,
     * you can use the {@link FileMigrationProvider} that implements this
     * method to return all migrations in a folder.
     *
     * The keys of the returned object are migration names and values are the
     * migrations. The order of the migrations is determined by the alphabetical
     * order of the migration names. The items in the object don't need to be
     * sorted, they are sorted by Kysely.
     */
    getMigrations(): Promise<Record<string, Migration>>;
}
