"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FileMigrationProvider = void 0;
const object_utils_js_1 = require("../util/object-utils.js");
/**
 * Reads all migrations from a folder.
 *
 * ### Examples
 *
 * ```ts
 * new FileMigrationProvider(
 *   'path/to/migrations/folder'
 * )
 * ```
 */
class FileMigrationProvider {
    #migrationFolderPath;
    constructor(migrationFolderPath) {
        this.#migrationFolderPath = migrationFolderPath;
    }
    async getMigrations() {
        // Import these dynamically so that we don't have any top level
        // node dependencies.
        const fs = await Promise.resolve().then(() => require('fs/promises'));
        const path = await Promise.resolve().then(() => require('path'));
        const migrations = {};
        const files = await fs.readdir(this.#migrationFolderPath);
        for (const fileName of files) {
            if ((fileName.endsWith('.js') || fileName.endsWith('.ts')) &&
                !fileName.endsWith('.d.ts')) {
                const migration = await Promise.resolve().then(() => require(path.join(this.#migrationFolderPath, fileName)));
                if (isMigration(migration)) {
                    migrations[fileName.substring(0, fileName.length - 3)] = migration;
                }
            }
        }
        return migrations;
    }
}
exports.FileMigrationProvider = FileMigrationProvider;
function isMigration(obj) {
    return (0, object_utils_js_1.isObject)(obj) && (0, object_utils_js_1.isFunction)(obj.up);
}
