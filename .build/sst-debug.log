[2022-05-23T23:18:03.141] [DEBUG] default - SST: 1.1.2
[2022-05-23T23:18:03.144] [DEBUG] default - CDK: 2.24.0
[2022-05-23T23:18:03.148] [DEBUG] aws-auth - Determining if we're on an EC2 instance.
[2022-05-23T23:18:03.148] [DEBUG] aws-auth - Does not look like an EC2 instance.
[2022-05-23T23:18:03.848] [INFO] default - Using stage: admin
[2022-05-23T23:18:03.850] [INFO] default - [90mPreparing your SST app[39m
[2022-05-23T23:18:03.880] [INFO] default - 
[2022-05-23T23:18:03.880] [INFO] default - =======================
[2022-05-23T23:18:03.881] [INFO] default -  Deploying debug stack
[2022-05-23T23:18:03.881] [INFO] default - =======================
[2022-05-23T23:18:03.881] [INFO] default - 
[2022-05-23T23:18:03.882] [DEBUG] core - synth {
  output: 'cdk.out',
  app: 'node bin/index.js notes admin us-east-1 "/Users/jmkim/notes/.build/lib"',
  rollback: true,
  roleArn: undefined,
  verbose: 0,
  noColor: false
}
[2022-05-23T23:18:07.288] [TRACE] cdk - 

[2022-05-23T23:18:07.341] [INFO] default - [90mDeploying stacks[39m
[2022-05-23T23:18:07.342] [DEBUG] core - checkInReviewBootstrapStacks
[2022-05-23T23:18:07.343] [DEBUG] core - checkInReviewBootstrapStackInRegion us-east-1
[2022-05-23T23:18:08.431] [TRACE] core - Initial stack states: [{"id":"admin-notes-debug-stack","name":"admin-notes-debug-stack","status":"pending","dependencies":[],"region":"us-east-1","events":[]}]
[2022-05-23T23:18:08.431] [TRACE] core - After update deploy statuses: [{"id":"admin-notes-debug-stack","name":"admin-notes-debug-stack","status":"pending","dependencies":[],"region":"us-east-1","events":[]}]
[2022-05-23T23:18:08.433] [DEBUG] core - deploy stack: started admin-notes-debug-stack
[2022-05-23T23:18:08.433] [DEBUG] core - deploy stack: get pre-deploy status
[2022-05-23T23:18:09.315] [DEBUG] core - deploy stack: get pre-deploy status: {
  StackStatus: 'CREATE_COMPLETE',
  LastUpdatedTime: 2022-05-23T13:24:24.354Z
}
[2022-05-23T23:18:09.317] [DEBUG] core - deploy stack: addInUseExports
[2022-05-23T23:18:09.319] [DEBUG] core - deploy stack: isTemplateChanged
[2022-05-23T23:18:10.438] [DEBUG] core - Resources:
  TableCD117FA1:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Table/Resource
  Bucket83908E77:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 1
            Prefix: payloads/
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: 'true'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Bucket/Resource
  BucketPolicyE9A3008A:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: Bucket83908E77
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - Bucket83908E77
                  - Arn
              - Fn::Join:
                  - ''
                  - - Fn::GetAtt:
                        - Bucket83908E77
                        - Arn
                    - /*
        Version: '2012-10-17'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Bucket/Policy/Resource
  BucketAutoDeleteObjectsCustomResourceBAFD23C2:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: Bucket83908E77
    DependsOn:
      - BucketPolicyE9A3008A
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Bucket/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: >-
            arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-770168654497-us-east-1
        S3Key: 483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs12.x
      Description:
        Fn::Join:
          - ''
          - - 'Lambda function for auto-deleting objects in '
            - Ref: Bucket83908E77
            - ' S3 bucket.'
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be
      aws:asset:property: Code
  Api:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: admin-notes-debug-stack-api
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Api
  ApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: Api
      StageName: admin
      AutoDeploy: true
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/ApiStage
  ConnectServiceRole07B61CE8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/ServiceRole/Resource
  ConnectServiceRoleDefaultPolicyCE008EDB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: ConnectServiceRoleDefaultPolicyCE008EDB
      Roles:
        - Ref: ConnectServiceRole07B61CE8
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/ServiceRole/DefaultPolicy/Resource
  Connect5B7625CA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-770168654497-us-east-1
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - ConnectServiceRole07B61CE8
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsConnect.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - ConnectServiceRoleDefaultPolicyCE008EDB
      - ConnectServiceRole07B61CE8
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ConnectLogRetentionC1F463CD:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Connect5B7625CA
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/LogRetention/Resource
  ConnectConnectPermission9DBC7813:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Connect5B7625CA
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/ConnectPermission
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: >-
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket: cdk-hnb659fds-assets-770168654497-us-east-1
        S3Key: 558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - >-
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Connect5B7625CA
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/ConnectIntegration
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $connect
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ConnectIntegration
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/ConnectRoute
  DisconnectServiceRole90AEC2EB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/ServiceRole/Resource
  DisconnectServiceRoleDefaultPolicy32856207:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: DisconnectServiceRoleDefaultPolicy32856207
      Roles:
        - Ref: DisconnectServiceRole90AEC2EB
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/ServiceRole/DefaultPolicy/Resource
  Disconnect7D6B12BD:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-770168654497-us-east-1
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - DisconnectServiceRole90AEC2EB
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsDisconnect.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - DisconnectServiceRoleDefaultPolicy32856207
      - DisconnectServiceRole90AEC2EB
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  DisconnectLogRetentionE61D7937:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Disconnect7D6B12BD
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/LogRetention/Resource
  DisconnectDisconnectPermission933E876E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Disconnect7D6B12BD
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/DisconnectPermission
  DisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Disconnect7D6B12BD
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DisconnectIntegration
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $disconnect
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: DisconnectIntegration
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DisconnectRoute
  ServiceRole4288B192:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/ServiceRole/Resource
  ServiceRoleDefaultPolicy94CF55F6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: ServiceRoleDefaultPolicy94CF55F6
      Roles:
        - Ref: ServiceRole4288B192
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/ServiceRole/DefaultPolicy/Resource
  Resource:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-770168654497-us-east-1
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - ServiceRole4288B192
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsDefault.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - ServiceRoleDefaultPolicy94CF55F6
      - ServiceRole4288B192
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  LogRetentionDD0A1FA1:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Resource
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/LogRetention/Resource
  DefaultPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Resource
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/DefaultPermission
  DefaultIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Resource
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DefaultIntegration
  DefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $default
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: DefaultIntegration
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DefaultRoute
Outputs:
  Endpoint:
    Value:
      Fn::Join:
        - ''
        - - Fn::GetAtt:
              - Api
              - ApiEndpoint
          - /admin
  BucketArn:
    Value:
      Fn::GetAtt:
        - Bucket83908E77
        - Arn
  BucketName:
    Value:
      Ref: Bucket83908E77
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-05-23T23:18:10.439] [DEBUG] core - Resources:
  TableCD117FA1:
    Type: AWS::DynamoDB::Table
    Properties:
      KeySchema:
        - AttributeName: pk
          KeyType: HASH
      AttributeDefinitions:
        - AttributeName: pk
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Table/Resource
  Bucket83908E77:
    Type: AWS::S3::Bucket
    Properties:
      BucketEncryption:
        ServerSideEncryptionConfiguration:
          - ServerSideEncryptionByDefault:
              SSEAlgorithm: AES256
      LifecycleConfiguration:
        Rules:
          - ExpirationInDays: 1
            Prefix: payloads/
            Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      Tags:
        - Key: aws-cdk:auto-delete-objects
          Value: 'true'
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Bucket/Resource
  BucketPolicyE9A3008A:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: Bucket83908E77
      PolicyDocument:
        Statement:
          - Action:
              - s3:GetBucket*
              - s3:List*
              - s3:DeleteObject*
            Effect: Allow
            Principal:
              AWS:
                Fn::GetAtt:
                  - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
                  - Arn
            Resource:
              - Fn::GetAtt:
                  - Bucket83908E77
                  - Arn
              - Fn::Join:
                  - ''
                  - - Fn::GetAtt:
                        - Bucket83908E77
                        - Arn
                    - /*
        Version: '2012-10-17'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Bucket/Policy/Resource
  BucketAutoDeleteObjectsCustomResourceBAFD23C2:
    Type: Custom::S3AutoDeleteObjects
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F
          - Arn
      BucketName:
        Ref: Bucket83908E77
    DependsOn:
      - BucketPolicyE9A3008A
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Bucket/AutoDeleteObjectsCustomResource/Default
  CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
      ManagedPolicyArns:
        - Fn::Sub: >-
            arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Role
  CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-770168654497-us-east-1
        S3Key: 483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be.zip
      Timeout: 900
      MemorySize: 128
      Handler: __entrypoint__.handler
      Role:
        Fn::GetAtt:
          - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
          - Arn
      Runtime: nodejs12.x
      Description:
        Fn::Join:
          - ''
          - - 'Lambda function for auto-deleting objects in '
            - Ref: Bucket83908E77
            - ' S3 bucket.'
    DependsOn:
      - CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/Custom::S3AutoDeleteObjectsCustomResourceProvider/Handler
      aws:asset:path: asset.483ae06ed27ef8ca76e011264d772420593a6cfe8544759c306ef3b98c9e25be
      aws:asset:property: Code
  Api:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: admin-notes-debug-stack-api
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.action
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Api
  ApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: Api
      StageName: admin
      AutoDeploy: true
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/ApiStage
  ConnectServiceRole07B61CE8:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/ServiceRole/Resource
  ConnectServiceRoleDefaultPolicyCE008EDB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: ConnectServiceRoleDefaultPolicyCE008EDB
      Roles:
        - Ref: ConnectServiceRole07B61CE8
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/ServiceRole/DefaultPolicy/Resource
  Connect5B7625CA:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-770168654497-us-east-1
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - ConnectServiceRole07B61CE8
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsConnect.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - ConnectServiceRoleDefaultPolicyCE008EDB
      - ConnectServiceRole07B61CE8
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ConnectLogRetentionC1F463CD:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Connect5B7625CA
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/LogRetention/Resource
  ConnectConnectPermission9DBC7813:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Connect5B7625CA
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Connect/ConnectPermission
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - logs:PutRetentionPolicy
              - logs:DeleteRetentionPolicy
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: >-
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      Roles:
        - Ref: LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/ServiceRole/DefaultPolicy/Resource
  LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A:
    Type: AWS::Lambda::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs14.x
      Code:
        S3Bucket: cdk-hnb659fds-assets-770168654497-us-east-1
        S3Key: 558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e.zip
      Role:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
          - Arn
    DependsOn:
      - >-
        LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB
      - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB
    Metadata:
      aws:cdk:path: >-
        admin-notes-debug-stack/LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8a/Resource
      aws:asset:path: asset.558dc75fbdc793c8e2f64f85d2d7ed2cb820c727ec7e9b08666ad1af0103992e
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ConnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Connect5B7625CA
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/ConnectIntegration
  ConnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $connect
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ConnectIntegration
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/ConnectRoute
  DisconnectServiceRole90AEC2EB:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/ServiceRole/Resource
  DisconnectServiceRoleDefaultPolicy32856207:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: DisconnectServiceRoleDefaultPolicy32856207
      Roles:
        - Ref: DisconnectServiceRole90AEC2EB
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/ServiceRole/DefaultPolicy/Resource
  Disconnect7D6B12BD:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-770168654497-us-east-1
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - DisconnectServiceRole90AEC2EB
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsDisconnect.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - DisconnectServiceRoleDefaultPolicy32856207
      - DisconnectServiceRole90AEC2EB
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  DisconnectLogRetentionE61D7937:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Disconnect7D6B12BD
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/LogRetention/Resource
  DisconnectDisconnectPermission933E876E:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Disconnect7D6B12BD
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Disconnect/DisconnectPermission
  DisconnectIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Disconnect7D6B12BD
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DisconnectIntegration
  DisconnectRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $disconnect
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: DisconnectIntegration
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DisconnectRoute
  ServiceRole4288B192:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/ServiceRole/Resource
  ServiceRoleDefaultPolicy94CF55F6:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - apigateway:*
              - dynamodb:*
              - execute-api:ManageConnections
            Effect: Allow
            Resource: '*'
        Version: '2012-10-17'
      PolicyName: ServiceRoleDefaultPolicy94CF55F6
      Roles:
        - Ref: ServiceRole4288B192
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/ServiceRole/DefaultPolicy/Resource
  Resource:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-770168654497-us-east-1
        S3Key: 0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4.zip
      Role:
        Fn::GetAtt:
          - ServiceRole4288B192
          - Arn
      Environment:
        Variables:
          TABLE_NAME:
            Ref: TableCD117FA1
      Handler: wsDefault.main
      MemorySize: 256
      Runtime: nodejs12.x
      Timeout: 10
    DependsOn:
      - ServiceRoleDefaultPolicy94CF55F6
      - ServiceRole4288B192
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/Resource
      aws:asset:path: asset.0d89df84ea307d9cb0d70fbd76481e4e86f449d075a2a082cc2d323ee69a98e4
      aws:asset:is-bundled: false
      aws:asset:property: Code
  LogRetentionDD0A1FA1:
    Type: Custom::LogRetention
    Properties:
      ServiceToken:
        Fn::GetAtt:
          - LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A
          - Arn
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/lambda/
            - Ref: Resource
      RetentionInDays: 7
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/LogRetention/Resource
  DefaultPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - Resource
          - Arn
      Principal: apigateway.amazonaws.com
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/Default/DefaultPermission
  DefaultIntegration:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: Api
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':apigateway:us-east-1:lambda:path/2015-03-31/functions/'
            - Fn::GetAtt:
                - Resource
                - Arn
            - /invocations
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DefaultIntegration
  DefaultRoute:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: Api
      RouteKey: $default
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: DefaultIntegration
    Metadata:
      aws:cdk:path: admin-notes-debug-stack/DefaultRoute
Outputs:
  Endpoint:
    Value:
      Fn::Join:
        - ''
        - - Fn::GetAtt:
              - Api
              - ApiEndpoint
          - /admin
  BucketArn:
    Value:
      Fn::GetAtt:
        - Bucket83908E77
        - Arn
  BucketName:
    Value:
      Ref: Bucket83908E77
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-05-23T23:18:10.439] [DEBUG] core - deploy stack: isTemplateChanged: unchanged
[2022-05-23T23:18:10.440] [DEBUG] core - deploy stack: done admin-notes-debug-stack {
  status: 'unchanged',
  statusReason: undefined,
  account: '770168654497',
  outputs: {
    BucketArn: 'arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-192j5fwgvuhu0',
    BucketName: 'admin-notes-debug-stack-bucket83908e77-192j5fwgvuhu0',
    Endpoint: 'wss://19beu6mjcd.execute-api.us-east-1.amazonaws.com/admin'
  },
  exports: {}
}
[2022-05-23T23:18:10.440] [INFO] core - [32m[39m
[32m ✅  admin-notes-debug-stack (no changes)[39m
[32m[39m
[2022-05-23T23:18:10.441] [DEBUG] core - At least 1 stack successfully deployed, call deployStacks() again
[2022-05-23T23:18:10.441] [TRACE] core - After deploy stacks: [{"id":"admin-notes-debug-stack","name":"admin-notes-debug-stack","status":"unchanged","dependencies":[],"account":"770168654497","region":"us-east-1","startedAt":1653315490440,"endedAt":1653315490440,"events":[],"outputs":{"BucketArn":"arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-192j5fwgvuhu0","BucketName":"admin-notes-debug-stack-bucket83908e77-192j5fwgvuhu0","Endpoint":"wss://19beu6mjcd.execute-api.us-east-1.amazonaws.com/admin"},"exports":{}}]
[2022-05-23T23:18:10.442] [INFO] default - 
Stack admin-notes-debug-stack
[2022-05-23T23:18:10.442] [INFO] default -   Status: no changes
[2022-05-23T23:18:10.443] [INFO] default -   Outputs:
[2022-05-23T23:18:10.443] [INFO] default -     BucketArn: arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-192j5fwgvuhu0
[2022-05-23T23:18:10.444] [INFO] default -     BucketName: admin-notes-debug-stack-bucket83908e77-192j5fwgvuhu0
[2022-05-23T23:18:10.444] [INFO] default -     Endpoint: wss://19beu6mjcd.execute-api.us-east-1.amazonaws.com/admin
[2022-05-23T23:18:10.444] [INFO] default - 
[2022-05-23T23:18:10.444] [DEBUG] default - deployRet [
  {
    id: 'admin-notes-debug-stack',
    name: 'admin-notes-debug-stack',
    region: 'us-east-1',
    status: 'unchanged',
    errorMessage: undefined,
    outputs: {
      BucketArn: 'arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-192j5fwgvuhu0',
      BucketName: 'admin-notes-debug-stack-bucket83908e77-192j5fwgvuhu0',
      Endpoint: 'wss://19beu6mjcd.execute-api.us-east-1.amazonaws.com/admin'
    },
    exports: {}
  }
]
[2022-05-23T23:18:10.446] [INFO] default - 
[2022-05-23T23:18:10.446] [INFO] default - ===============
[2022-05-23T23:18:10.446] [INFO] default -  Deploying app
[2022-05-23T23:18:10.446] [INFO] default - ===============
[2022-05-23T23:18:10.447] [INFO] default - 
[2022-05-23T23:18:10.447] [DEBUG] core - synth {
  output: '.build/cdk.out',
  app: 'node .build/run.js',
  rollback: true,
  roleArn: undefined,
  verbose: 0,
  noColor: false
}
[2022-05-23T23:18:13.865] [TRACE] cdk - 

[2022-05-23T23:18:23.582] [INFO] default - [90mDeploying stacks[39m
[2022-05-23T23:18:23.583] [DEBUG] core - checkInReviewBootstrapStacks
[2022-05-23T23:18:23.583] [DEBUG] core - checkInReviewBootstrapStackInRegion us-east-1
[2022-05-23T23:18:24.447] [TRACE] core - Initial stack states: [{"id":"admin-notes-MyStack","name":"admin-notes-MyStack","status":"pending","dependencies":[],"region":"us-east-1","events":[]}]
[2022-05-23T23:18:24.447] [TRACE] core - After update deploy statuses: [{"id":"admin-notes-MyStack","name":"admin-notes-MyStack","status":"pending","dependencies":[],"region":"us-east-1","events":[]}]
[2022-05-23T23:18:24.448] [DEBUG] core - deploy stack: started admin-notes-MyStack
[2022-05-23T23:18:24.448] [DEBUG] core - deploy stack: get pre-deploy status
[2022-05-23T23:18:25.340] [DEBUG] core - deploy stack: get pre-deploy status: {
  StackStatus: 'UPDATE_COMPLETE',
  LastUpdatedTime: 2022-05-23T14:00:27.868Z
}
[2022-05-23T23:18:25.340] [DEBUG] core - deploy stack: addInUseExports
[2022-05-23T23:18:25.342] [DEBUG] core - deploy stack: isTemplateChanged
[2022-05-23T23:18:26.236] [DEBUG] core - Resources:
  SSTMetadata:
    Type: AWS::CDK::Metadata
    Metadata:
      aws:cdk:path: admin-notes-MyStack/SSTMetadata
      sst:version: 1.1.2
      sst:constructs:
        - id: Api
          addr: c8957c3e1985336830253373f09cb76bc1c3f0fb16
          stack: admin-notes-MyStack
          type: Api
          data:
            graphql: false
            url:
              Fn::Join:
                - ''
                - - https://
                  - Ref: ApiCD79AAA0
                  - .execute-api.us-east-1.
                  - Ref: AWS::URLSuffix
                  - /
            httpApiId:
              Ref: ApiCD79AAA0
            routes:
              - route: GET /
                fn:
                  node: c84eaeb289b7dadcbd4c77eb8ffe13c22a56f8dd6e
                  stack: admin-notes-MyStack
        - id: Lambda_GET_--
          addr: c84eaeb289b7dadcbd4c77eb8ffe13c22a56f8dd6e
          stack: admin-notes-MyStack
          type: Function
          data:
            localId: admin-notes-MyStack-Api-Lambda_GET_-
            arn:
              Fn::GetAtt:
                - ApiLambdaGETB1714EF3
                - Arn
  ApiCD79AAA0:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - '*'
        AllowMethods:
          - '*'
        AllowOrigins:
          - '*'
      Name: admin-notes-Api
      ProtocolType: HTTP
      Tags:
        sst:app: notes
        sst:stage: admin
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Api/Resource
  ApiDefaultStage1AAE989B:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      StageName: $default
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt:
            - ApiLogGroup1717FE17
            - Arn
        Format: >-
          {"requestTime":"$context.requestTime","requestId":"$context.requestId","httpMethod":"$context.httpMethod","path":"$context.path","routeKey":"$context.routeKey","status":$context.status,"responseLatency":$context.responseLatency,"integrationRequestId":"$context.integration.requestId","integrationStatus":"$context.integration.status","integrationLatency":"$context.integration.latency","integrationServiceStatus":"$context.integration.integrationStatus","ip":"$context.identity.sourceIp","userAgent":"$context.identity.userAgent","cognitoIdentityId":"$context.identity.cognitoIdentityId"}
      AutoDeploy: true
      Tags:
        sst:app: notes
        sst:stage: admin
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Api/DefaultStage/Resource
  ApiLogGroup1717FE17:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/vendedlogs/apis/admin-notes-Api-
            - Ref: ApiCD79AAA0
            - /default
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/LogGroup/Resource
  ApiLambdaGETServiceRole210B6205:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Lambda_GET_--/ServiceRole/Resource
  ApiLambdaGETServiceRoleDefaultPolicy013A8DEA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-192j5fwgvuhu0
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-192j5fwgvuhu0/*
        Version: '2012-10-17'
      PolicyName: ApiLambdaGETServiceRoleDefaultPolicy013A8DEA
      Roles:
        - Ref: ApiLambdaGETServiceRole210B6205
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Lambda_GET_--/ServiceRole/DefaultPolicy/Resource
  ApiLambdaGETB1714EF3:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-770168654497-us-east-1
        S3Key: 60c24673c0b393cf32ebf0a8f67868ba680b207707b56cc28238f35f127f51af.zip
      Role:
        Fn::GetAtt:
          - ApiLambdaGETServiceRole210B6205
          - Arn
      Environment:
        Variables:
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: functions/lambda.handler
          SST_DEBUG_ENDPOINT: wss://19beu6mjcd.execute-api.us-east-1.amazonaws.com/admin
          SST_DEBUG_BUCKET_NAME: admin-notes-debug-stack-bucket83908e77-192j5fwgvuhu0
          SST_FUNCTION_ID: admin-notes-MyStack-Api-Lambda_GET_-
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ApiLambdaGETServiceRoleDefaultPolicy013A8DEA
      - ApiLambdaGETServiceRole210B6205
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Lambda_GET_--/Resource
      aws:asset:path: >-
        asset.60c24673c0b393cf32ebf0a8f67868ba680b207707b56cc28238f35f127f51af.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ApiLambdaGETEventInvokeConfig1B7345F6:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ApiLambdaGETB1714EF3
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Lambda_GET_--/EventInvokeConfig/Resource
  ApiRouteGETIntegrationGET10DCD122:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ApiLambdaGETB1714EF3
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Route_GET_--/Integration_GET_--/Resource
  ApiRouteGETIntegrationGETPermission3C1F1A50:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ApiLambdaGETB1714EF3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-east-1:770168654497:'
            - Ref: ApiCD79AAA0
            - /*/*/
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Route_GET_--/Integration_GET_---Permission
  ApiRouteGET8AC7D3F8:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      RouteKey: GET /
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ApiRouteGETIntegrationGET10DCD122
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Route_GET_--/Resource
Outputs:
  ApiEndpoint:
    Value:
      Fn::GetAtt:
        - ApiCD79AAA0
        - ApiEndpoint
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-05-23T23:18:26.237] [DEBUG] core - Resources:
  SSTMetadata:
    Type: AWS::CDK::Metadata
    Metadata:
      aws:cdk:path: admin-notes-MyStack/SSTMetadata
      sst:version: 1.1.2
      sst:constructs:
        - id: Api
          addr: c8957c3e1985336830253373f09cb76bc1c3f0fb16
          stack: admin-notes-MyStack
          type: Api
          data:
            graphql: false
            url:
              Fn::Join:
                - ''
                - - https://
                  - Ref: ApiCD79AAA0
                  - .execute-api.us-east-1.
                  - Ref: AWS::URLSuffix
                  - /
            httpApiId:
              Ref: ApiCD79AAA0
            routes:
              - route: GET /
                fn:
                  node: c84eaeb289b7dadcbd4c77eb8ffe13c22a56f8dd6e
                  stack: admin-notes-MyStack
        - id: Lambda_GET_--
          addr: c84eaeb289b7dadcbd4c77eb8ffe13c22a56f8dd6e
          stack: admin-notes-MyStack
          type: Function
          data:
            localId: admin-notes-MyStack-Api-Lambda_GET_-
            arn:
              Fn::GetAtt:
                - ApiLambdaGETB1714EF3
                - Arn
  ApiCD79AAA0:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      CorsConfiguration:
        AllowHeaders:
          - '*'
        AllowMethods:
          - '*'
        AllowOrigins:
          - '*'
      Name: admin-notes-Api
      ProtocolType: HTTP
      Tags:
        sst:app: notes
        sst:stage: admin
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Api/Resource
  ApiDefaultStage1AAE989B:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      StageName: $default
      AccessLogSettings:
        DestinationArn:
          Fn::GetAtt:
            - ApiLogGroup1717FE17
            - Arn
        Format: >-
          {"requestTime":"$context.requestTime","requestId":"$context.requestId","httpMethod":"$context.httpMethod","path":"$context.path","routeKey":"$context.routeKey","status":$context.status,"responseLatency":$context.responseLatency,"integrationRequestId":"$context.integration.requestId","integrationStatus":"$context.integration.status","integrationLatency":"$context.integration.latency","integrationServiceStatus":"$context.integration.integrationStatus","ip":"$context.identity.sourceIp","userAgent":"$context.identity.userAgent","cognitoIdentityId":"$context.identity.cognitoIdentityId"}
      AutoDeploy: true
      Tags:
        sst:app: notes
        sst:stage: admin
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Api/DefaultStage/Resource
  ApiLogGroup1717FE17:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        Fn::Join:
          - ''
          - - /aws/vendedlogs/apis/admin-notes-Api-
            - Ref: ApiCD79AAA0
            - /default
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    UpdateReplacePolicy: Retain
    DeletionPolicy: Retain
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/LogGroup/Resource
  ApiLambdaGETServiceRole210B6205:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: '2012-10-17'
      ManagedPolicyArns:
        - Fn::Join:
            - ''
            - - 'arn:'
              - Ref: AWS::Partition
              - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Lambda_GET_--/ServiceRole/Resource
  ApiLambdaGETServiceRoleDefaultPolicy013A8DEA:
    Type: AWS::IAM::Policy
    Properties:
      PolicyDocument:
        Statement:
          - Action:
              - xray:PutTraceSegments
              - xray:PutTelemetryRecords
            Effect: Allow
            Resource: '*'
          - Action: s3:*
            Effect: Allow
            Resource:
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-192j5fwgvuhu0
              - >-
                arn:aws:s3:::admin-notes-debug-stack-bucket83908e77-192j5fwgvuhu0/*
        Version: '2012-10-17'
      PolicyName: ApiLambdaGETServiceRoleDefaultPolicy013A8DEA
      Roles:
        - Ref: ApiLambdaGETServiceRole210B6205
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Lambda_GET_--/ServiceRole/DefaultPolicy/Resource
  ApiLambdaGETB1714EF3:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: cdk-hnb659fds-assets-770168654497-us-east-1
        S3Key: 60c24673c0b393cf32ebf0a8f67868ba680b207707b56cc28238f35f127f51af.zip
      Role:
        Fn::GetAtt:
          - ApiLambdaGETServiceRole210B6205
          - Arn
      Environment:
        Variables:
          SST_DEBUG_SRC_PATH: backend
          SST_DEBUG_SRC_HANDLER: functions/lambda.handler
          SST_DEBUG_ENDPOINT: wss://19beu6mjcd.execute-api.us-east-1.amazonaws.com/admin
          SST_DEBUG_BUCKET_NAME: admin-notes-debug-stack-bucket83908e77-192j5fwgvuhu0
          SST_FUNCTION_ID: admin-notes-MyStack-Api-Lambda_GET_-
          AWS_NODEJS_CONNECTION_REUSE_ENABLED: '1'
          SST_DEBUG_IS_API_ROUTE: '1'
      EphemeralStorage:
        Size: 512
      Handler: index.main
      MemorySize: 1024
      Runtime: nodejs16.x
      Tags:
        - Key: sst:app
          Value: notes
        - Key: sst:stage
          Value: admin
      Timeout: 10
      TracingConfig:
        Mode: Active
    DependsOn:
      - ApiLambdaGETServiceRoleDefaultPolicy013A8DEA
      - ApiLambdaGETServiceRole210B6205
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Lambda_GET_--/Resource
      aws:asset:path: >-
        asset.60c24673c0b393cf32ebf0a8f67868ba680b207707b56cc28238f35f127f51af.zip
      aws:asset:is-bundled: false
      aws:asset:property: Code
  ApiLambdaGETEventInvokeConfig1B7345F6:
    Type: AWS::Lambda::EventInvokeConfig
    Properties:
      FunctionName:
        Ref: ApiLambdaGETB1714EF3
      Qualifier: $LATEST
      MaximumRetryAttempts: 0
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Lambda_GET_--/EventInvokeConfig/Resource
  ApiRouteGETIntegrationGET10DCD122:
    Type: AWS::ApiGatewayV2::Integration
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      IntegrationType: AWS_PROXY
      IntegrationUri:
        Fn::GetAtt:
          - ApiLambdaGETB1714EF3
          - Arn
      PayloadFormatVersion: '2.0'
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Route_GET_--/Integration_GET_--/Resource
  ApiRouteGETIntegrationGETPermission3C1F1A50:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - ApiLambdaGETB1714EF3
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ''
          - - 'arn:'
            - Ref: AWS::Partition
            - ':execute-api:us-east-1:770168654497:'
            - Ref: ApiCD79AAA0
            - /*/*/
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Route_GET_--/Integration_GET_---Permission
  ApiRouteGET8AC7D3F8:
    Type: AWS::ApiGatewayV2::Route
    Properties:
      ApiId:
        Ref: ApiCD79AAA0
      RouteKey: GET /
      AuthorizationType: NONE
      Target:
        Fn::Join:
          - ''
          - - integrations/
            - Ref: ApiRouteGETIntegrationGET10DCD122
    Metadata:
      aws:cdk:path: admin-notes-MyStack/Api/Route_GET_--/Resource
Outputs:
  ApiEndpoint:
    Value:
      Fn::GetAtt:
        - ApiCD79AAA0
        - ApiEndpoint
Parameters:
  BootstrapVersion:
    Type: AWS::SSM::Parameter::Value<String>
    Default: /cdk-bootstrap/hnb659fds/version
    Description: >-
      Version of the CDK Bootstrap resources in this environment, automatically
      retrieved from SSM Parameter Store. [cdk:skip]
Rules:
  CheckBootstrapVersion:
    Assertions:
      - Assert:
          Fn::Not:
            - Fn::Contains:
                - - '1'
                  - '2'
                  - '3'
                  - '4'
                  - '5'
                - Ref: BootstrapVersion
        AssertDescription: >-
          CDK bootstrap stack version 6 required. Please run 'cdk bootstrap'
          with a recent version of the CDK CLI.

[2022-05-23T23:18:26.237] [DEBUG] core - deploy stack: isTemplateChanged: unchanged
[2022-05-23T23:18:26.238] [DEBUG] core - deploy stack: done admin-notes-MyStack {
  status: 'unchanged',
  statusReason: undefined,
  account: '770168654497',
  outputs: {
    ApiEndpoint: 'https://7pjvx2gww5.execute-api.us-east-1.amazonaws.com'
  },
  exports: {}
}
[2022-05-23T23:18:26.238] [INFO] core - [32m[39m
[32m ✅  admin-notes-MyStack (no changes)[39m
[32m[39m
[2022-05-23T23:18:26.240] [DEBUG] core - At least 1 stack successfully deployed, call deployStacks() again
[2022-05-23T23:18:26.240] [TRACE] core - After deploy stacks: [{"id":"admin-notes-MyStack","name":"admin-notes-MyStack","status":"unchanged","dependencies":[],"account":"770168654497","region":"us-east-1","startedAt":1653315506238,"endedAt":1653315506238,"events":[],"outputs":{"ApiEndpoint":"https://7pjvx2gww5.execute-api.us-east-1.amazonaws.com"},"exports":{}}]
[2022-05-23T23:18:26.243] [INFO] default - 
Stack admin-notes-MyStack
[2022-05-23T23:18:26.243] [INFO] default -   Status: no changes
[2022-05-23T23:18:26.243] [INFO] default -   Outputs:
[2022-05-23T23:18:26.244] [INFO] default -     ApiEndpoint: https://7pjvx2gww5.execute-api.us-east-1.amazonaws.com
[2022-05-23T23:18:26.244] [INFO] default - 
[2022-05-23T23:18:27.115] [INFO] default - 
[2022-05-23T23:18:27.116] [INFO] default - ==========================
[2022-05-23T23:18:27.117] [INFO] default -  Starting Live Lambda Dev
[2022-05-23T23:18:27.117] [INFO] default - ==========================
[2022-05-23T23:18:27.117] [INFO] default - 
[2022-05-23T23:18:27.126] [DEBUG] websocket - startWebSocketClient wss://19beu6mjcd.execute-api.us-east-1.amazonaws.com/admin admin-notes-debug-stack-bucket83908e77-192j5fwgvuhu0
[2022-05-23T23:18:27.129] [DEBUG] default - Checking port 12557 on host 0.0.0.0
[2022-05-23T23:18:27.139] [DEBUG] default - Checking port 13557 on host 0.0.0.0
[2022-05-23T23:18:27.142] [DEBUG] client - Starting runtime server on port: 12557
[2022-05-23T23:18:28.284] [DEBUG] websocket - WebSocket connection opened
[2022-05-23T23:18:28.613] [INFO] client - Debug session started. Listening for requests...
[2022-05-23T23:18:28.614] [DEBUG] client - Client connection id: SlSkJf0SoAMCFIQ=
[2022-05-23T23:18:52.078] [INFO] client - [90mac46e4b3-a223-488e-be27-30ca38b90964 REQUEST admin-notes-MyStack-ApiLambdaGETB1714EF3-vxE3bBXWan6x [functions/lambda.handler] invoked by API GET /[39m
[2022-05-23T23:18:52.081] [DEBUG] client - Invoking local function...
[2022-05-23T23:18:52.082] [DEBUG] client - Triggering {
  id: 'admin-notes-MyStack-Api-Lambda_GET_-',
  handler: 'functions/lambda.handler',
  runtime: 'nodejs16.x',
  srcPath: 'backend',
  bundle: { format: 'esm' },
  root: '/Users/jmkim/notes'
}
[2022-05-23T23:18:52.083] [DEBUG] client - First build...
[2022-05-23T23:18:52.089] [DEBUG] client - First build finished
[2022-05-23T23:18:52.092] [DEBUG] client - Spawning {
  command: '/usr/local/bin/node',
  args: [
    '/Users/jmkim/notes/node_modules/@serverless-stack/aws-lambda-ric/bin/index.js',
    '/Users/jmkim/notes/.sst/artifacts/admin-notes-MyStack-Api-Lambda_GET_-/backend/functions/lambda.handler'
  ],
  env: { AWS_LAMBDA_NODEJS_USE_ALTERNATIVE_CLIENT_1: 'true' }
}
[2022-05-23T23:18:52.224] [DEBUG] client - Worker waiting for function admin-notes-MyStack-Api-Lambda_GET_-
[2022-05-23T23:18:52.227] [DEBUG] client - Sending next payload ac46e4b3-a223-488e-be27-30ca38b90964 admin-notes-MyStack-Api-Lambda_GET_- {
  version: '2.0',
  routeKey: 'GET /',
  rawPath: '/',
  rawQueryString: '',
  headers: {
    accept: 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',
    'accept-encoding': 'gzip, deflate, br',
    'accept-language': 'ko-KR,ko;q=0.9,en-US;q=0.8,en;q=0.7',
    'cache-control': 'max-age=0',
    'content-length': '0',
    host: '7pjvx2gww5.execute-api.us-east-1.amazonaws.com',
    'sec-ch-ua': '" Not A;Brand";v="99", "Chromium";v="101", "Google Chrome";v="101"',
    'sec-ch-ua-mobile': '?0',
    'sec-ch-ua-platform': '"macOS"',
    'sec-fetch-dest': 'document',
    'sec-fetch-mode': 'navigate',
    'sec-fetch-site': 'none',
    'sec-fetch-user': '?1',
    'upgrade-insecure-requests': '1',
    'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.64 Safari/537.36',
    'x-amzn-trace-id': 'Root=1-628b97cb-0ea5598627d2250f0faade7d',
    'x-forwarded-for': '114.203.114.27',
    'x-forwarded-port': '443',
    'x-forwarded-proto': 'https'
  },
  requestContext: {
    accountId: '770168654497',
    apiId: '7pjvx2gww5',
    domainName: '7pjvx2gww5.execute-api.us-east-1.amazonaws.com',
    domainPrefix: '7pjvx2gww5',
    http: {
      method: 'GET',
      path: '/',
      protocol: 'HTTP/1.1',
      sourceIp: '114.203.114.27',
      userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/101.0.4951.64 Safari/537.36'
    },
    requestId: 'SlSnziGlIAMESoA=',
    routeKey: 'GET /',
    stage: '$default',
    time: '23/May/2022:14:18:51 +0000',
    timeEpoch: 1653315531328
  },
  isBase64Encoded: false
}
[2022-05-23T23:18:52.249] [DEBUG] client - Received response for ac46e4b3-a223-488e-be27-30ca38b90964 admin-notes-MyStack-Api-Lambda_GET_-
[2022-05-23T23:18:52.250] [DEBUG] client - Response {
  type: 'success',
  data: {
    statusCode: 200,
    headers: { 'Content-Type': 'text/plain' },
    body: 'Hello, World! Your request was received at 23/May/2022:14:18:51 +0000.'
  }
}
[2022-05-23T23:18:52.251] [INFO] client - [90mac46e4b3-a223-488e-be27-30ca38b90964 RESPONSE {"statusCode":200,"headers":{"Content-Type":"text/plain"},"body":"Hello, World! Your request was received at 23/May/2022:14:18:51 +0000."}[39m
[2022-05-23T23:18:52.253] [DEBUG] client - Worker waiting for function admin-notes-MyStack-Api-Lambda_GET_-
