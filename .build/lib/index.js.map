{
  "version": 3,
  "sources": ["../../stacks/index.js", "../../stacks/StorageStack.js", "../../stacks/MyStack.js"],
  "sourcesContent": ["import { StorageStack } from \"./StorageStack\";\nimport { MyStack } from \"./MyStack\";\nimport { App } from \"@serverless-stack/resources\";\n\nexport default function main(app) {\n  app.setDefaultFunctionProps({\n    runtime: \"nodejs16.x\",\n    srcPath: \"backend\",\n    bundle: {\n      format: \"esm\",\n    },\n  });\n  app.stack(StorageStack);\n  app.stack(MyStack);\n}\n\n", "import { Bucket, Table } from \"@serverless-stack/resources\";\n\nexport function StorageStack({ stack, app }) {\n  // Create an S3 bucket\n  const bucket = new Bucket(stack, \"Uploads\");\n  // Create the DynamoDB table\n  const table = new Table(stack, \"Notes\", {\n    fields: {\n      userId: \"string\",\n      noteId: \"string\",\n    },\n    primaryIndex: { partitionKey: \"userId\", sortKey: \"noteId\" },\n  });\n\n  return {\n    table,\n    bucket,\n  };\n}\n", "import { StackContext, Api } from \"@serverless-stack/resources\";\n\n/**\n * @param {StackContext} ctx\n */\nexport function MyStack({ stack }) {\n  // Create an HTTP API\n  const api = new Api(stack, \"Api\", {\n    routes: {\n      \"GET /\": \"functions/lambda.handler\",\n    },\n  });\n\n  // Show the endpoint in the output\n  stack.addOutputs({\n    ApiEndpoint: api.url,\n  });\n}\n//------------------------------------------\n// \uC6D0\uB798 \uC788\uB358 \uB0B4\uC6A9 - // \uD3EC\uD568, \uCF54\uBA58\uD2B8\uB97C \uD480\uAC83\n//------------------------------------------\n//import { StackContext, Api } from \"@serverless-stack/resources\";\n\n/**\n * @param {StackContext} ctx\n */\n/*\nexport function MyStack({ stack }) {\n  new Api(stack, \"api\", {\n    routes: {\n      \"GET /\": \"functions/lambda.handler\",\n    },\n  });\n}\n*/\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,uBAA8B;AAEvB,sBAAsB,EAAE,OAAO,OAAO;AAE3C,QAAM,SAAS,IAAI,wBAAO,OAAO,SAAS;AAE1C,QAAM,QAAQ,IAAI,uBAAM,OAAO,SAAS;AAAA,IACtC,QAAQ;AAAA,MACN,QAAQ;AAAA,MACR,QAAQ;AAAA,IACV;AAAA,IACA,cAAc,EAAE,cAAc,UAAU,SAAS,SAAS;AAAA,EAC5D,CAAC;AAED,SAAO;AAAA,IACL;AAAA,IACA;AAAA,EACF;AACF;AAhBgB;;;ACFhB,wBAAkC;AAK3B,iBAAiB,EAAE,SAAS;AAEjC,QAAM,MAAM,IAAI,sBAAI,OAAO,OAAO;AAAA,IAChC,QAAQ;AAAA,MACN,SAAS;AAAA,IACX;AAAA,EACF,CAAC;AAGD,QAAM,WAAW;AAAA,IACf,aAAa,IAAI;AAAA,EACnB,CAAC;AACH;AAZgB;;;AFHhB,wBAAoB;AAEL,cAAc,KAAK;AAChC,MAAI,wBAAwB;AAAA,IAC1B,SAAS;AAAA,IACT,SAAS;AAAA,IACT,QAAQ;AAAA,MACN,QAAQ;AAAA,IACV;AAAA,EACF,CAAC;AACD,MAAI,MAAM,YAAY;AACtB,MAAI,MAAM,OAAO;AACnB;AAVwB;",
  "names": []
}
